<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on 卢文的博客</title>
    <link>http://luwen.tech/categories/Kubernetes/</link>
    <description>Recent content in Kubernetes on 卢文的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 20 Aug 2019 08:57:19 +0800</lastBuildDate>
    
	<atom:link href="http://luwen.tech/categories/Kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes探针最佳实践</title>
      <link>http://luwen.tech/post/kubernetes%E6%8E%A2%E9%92%88%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 20 Aug 2019 08:57:19 +0800</pubDate>
      
      <guid>http://luwen.tech/post/kubernetes%E6%8E%A2%E9%92%88%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>1. 存活和就绪的结果处理程序需要是互相独立的程序 如前所述，对于在Kubernetes上下文中部署的每个产品，应该实现2个分别处理HTTP请求“存活”和“就绪”的处理程序。这些探测器的处理程序需要独立实现自己的功能。 这适用于作业处理应用程序。对于Kubernetes，了解应用程序是否</description>
    </item>
    
    <item>
      <title>Kubernets资源限制</title>
      <link>http://luwen.tech/post/kubernets%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/</link>
      <pubDate>Thu, 15 Aug 2019 21:52:19 +0800</pubDate>
      
      <guid>http://luwen.tech/post/kubernets%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/</guid>
      <description>###普通应用资源限制 resources: limits: cpu: 100m memory: 1024Mi requests: cpu: 50m memory: 512Mi java jdk 8部分版本和更新版本的应用资源限制： env: - name: JAVA_OPTS value: &amp;quot;-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap&amp;quot; resources: limits: cpu: 100m memory: 1024Mi requests: cpu: 50m memory: 512Mi</description>
    </item>
    
    <item>
      <title>阿里云Kubernetes服务日志收集方案</title>
      <link>http://luwen.tech/post/%E9%98%BF%E9%87%8C%E4%BA%91k8s%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 09 Aug 2019 16:16:24 +0800</pubDate>
      
      <guid>http://luwen.tech/post/%E9%98%BF%E9%87%8C%E4%BA%91k8s%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E6%96%B9%E6%A1%88/</guid>
      <description>Kubernetes集群中的日志收集 通用做法： 方案 优点 缺点 每个app的镜像中都集成日志收集组件 部署方便，kubernetes的yaml文件无须特别配置，可以为每个app自定义日志收集配置 强耦合，不方便应用和日志收集组件升级和维护且会导致镜像过大 单独创建一个日志收集组件跟app的容</description>
    </item>
    
  </channel>
</rss>